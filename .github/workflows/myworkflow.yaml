name: My CI_CD workflow

# my trigger
on:
  push:
    branches:
    - 'release/v[0-9]+.[0-9]+'

jobs:
  # add comments to verify the commit check funciton
  CI_CD_JOB:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
 
      - name: Get Latest Commit Message
        id: commit_message
        run: echo "::set-output name=message::$(git log -1 --pretty=format:'%s')"
 
      - name: Stop Workflow # if Commit Message Starts with 'NORUN'
        if: startsWith(steps.commit_message.outputs.message, '#NORUN')
        run: |
          echo "Commit message starts with #NORUN, stopping workflow."
          exit 0
      
      - name: Run Trivy vulnerability scanner in fs mode
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          format: 'table'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'HIGH'
          output: trivy.txt

      - name: Find High in Trivy
        id: search_file
        run: |
          if grep -q "HIGH" trivy.txt; then
            echo "::set-output name=Trivy_Status::Failed"
          else
            echo "::set-output name=Trivy_Status::Success"
          fi
     
      # notification to slack
      - name: Slack Notification When trivy failure
        if: success() && steps.search_file.outputs.Trivy_Status == 'Failed'
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_TITLE: 'Scan failed - DAI GAOLUO'
          SLACK_MESSAGE: 'Failed trivy scan, see uploaded report'
          SLACK_COLOR: 'failure'
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_TEST_URL }}  

      - name: Slack Upload Trivy
        if: success() && steps.search_file.outputs.Trivy_Status == 'Failed'
        uses: MeilCli/slack-upload-file@v4
        with:
          slack_token: ${{ secrets.SLACK_TOKEN }}
          channel_id: ${{ secrets.SLACK_CHANNEL_ID }}
          file_path: 'trivy.txt'
          initial_comment: 'Scan report by DAI GAOLUO'
      
      # When trivy success, docker build and cosign and finally slack
      - name: Install Cosign
        uses: sigstore/cosign-installer@v3.5.0

      - name: Set up QEMU
        if: success() && steps.search_file.outputs.Trivy_Status == 'Success'
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        if: success() && steps.search_file.outputs.Trivy_Status == 'Success'
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        if: success() && steps.search_file.outputs.Trivy_Status == 'Success'
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - id: docker_meta
        if: success() && steps.search_file.outputs.Trivy_Status == 'Success'
        uses: docker/metadata-action@v4.4.0
        with:
          images: ghcr.io/sigstore/sample-honk
          tags: type=sha,format=long

      - name: Build and Push container images
        if: success() && steps.search_file.outputs.Trivy_Status == 'Success'
        uses: docker/build-push-action@v4.0.0
        id: build-and-push
        with:
          push: true
          tags: daigaoluo/go-fortune:${{ github.sha }}

      # https://docs.github.com/en/actions/security-guides/security-hardening-for-github-actions#using-an-intermediate-environment-variable
      - name: Sign image with a key
        if: success() && steps.search_file.outputs.Trivy_Status == 'Success'
        run: |
          images=""
          for tag in ${TAGS}; do
            images+="${tag}@${DIGEST} "
          done
          cosign sign --yes --key env://COSIGN_PRIVATE_KEY ${images}
        env:
          TAGS: daigaoluo/go-fortune:${{ github.sha }}
          COSIGN_PRIVATE_KEY: ${{ secrets.COSIGN_PRIVATE_KEY }}
          COSIGN_PASSWORD: ${{ secrets.COSIGN_PASSWORD }}
          DIGEST: ${{ steps.build-and-push.outputs.digest }}

      # - name: Sign the images with GitHub OIDC Token
      #   env:
      #     DIGEST: ${{ steps.build-and-push.outputs.digest }}
      #     TAGS: daigaoluo/go-fortune:${{ github.sha }}
      #   run: |
      #     images=""
      #     for tag in ${TAGS}; do
      #       images+="${tag}@${DIGEST} "
      #     done
      #     cosign sign --yes ${images}

      - name: Slack Notification When trivy success
        if: success() && steps.search_file.outputs.Trivy_Status == 'Success'
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_TITLE: 'Image build and signed'
          SLACKIFY_MARKDOWN: 'true'
          SLACK_MESSAGE: 
            '**Name**: DAI GAOLUO \n
            **Metriculation**: A0292132M \n
            **Email**: [e1338594@u.nus.edu](e1338594@u.nus.edu) \n
            **Git**: ${{ github.server_url }}/${{ github.repository }} \n
            **Image**: [https://hub.docker.com/repository/docker/daigaoluo/go-fortune/general](https://hub.docker.com/repository/docker/daigaoluo/go-fortune/general)'
          SLACK_COLOR: 'success'
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_TEST_URL }}  